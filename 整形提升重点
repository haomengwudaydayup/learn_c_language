
在一个函数内部修改全局变量的值会影响其它函数，全局变量的值在函数内部被修改后并不会自动恢复，它会一直保留该值，直到下次被修改。


/*
  我们都知道有时候我们创建的char类型的变量，只能存储8位数据
  但是打印的时候确是以32位%d %U打印，关于这样的打印，就会牵扯一个概念
  就是整形提升！如下：
 
 */
整形提升
1、
char a = -1;
printf("a = %d\n",a);
printf("Ua = %d\n",a);

由于-1是32位存储的，但是char只能接收8位，（运算取决于补码）
//10000000000000000000000000000001  --> -1的原码
//11111111111111111111111111111111  --> -1的补码 （操作码）
由于char是有符号字符型，因此整形提升要补1  即接下来：
//11111111111111111111111111111111  %u打印形式 
它的补码为%d打印形式
//10000000000000000000000000000001 --> %d
因此打印为2^32-1 和 -1

2、
unsigned char a = -1;
printf("a = %d\n",a);
printf("Ua = %d\n",a);
//10000000000000000000000000000001  --> -1的原码
//11111111111111111111111111111111  --> -1的补码 （操作码）
由于char是无符号字符型，因此整形提升要补0 即接下来：
//00000000000000000000000011111111  --> %U %d
unsigned类型的整形提升打印%d%u是一样的，只有有符号整形提升打印不一样
打印位%u 255 %d 255

